<ek:UIRoot   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ek="clr-namespace:EmptyKeys.UserInterface.Designer;assembly=EmptyKeys.UserInterface.Designer"
             xmlns:c="clr-namespace:EmptyKeys.UserInterface.Designer.Charts;assembly=EmptyKeys.UserInterface.Designer"
             xmlns:data="clr-namespace:Rzut.Interface.Data.ViewModels.DataEntry;assembly=Rzut.Interface.Data"
             xmlns:ex="clr-namespace:Rzut.Interface.Data.UI;assembly=Rzut.Interface.Data"

             mc:Ignorable="d" 
             d:DesignHeight="720" d:DesignWidth="1280" Background="LightGray" d:DataContext="{d:DesignInstance data:DataEntryContext, IsDesignTimeCreatable=True}">
    <ek:UIRoot.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Rzut.Interface;component/Dictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>

    </ek:UIRoot.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.08*"/>
            <RowDefinition Height="0.10*"/>
            <RowDefinition Height="0.67*"/>
            <RowDefinition Height="0.15*"/>
        </Grid.RowDefinitions>
        <ItemsControl Grid.Row="0" ItemsSource="{Binding Entities}" Name="tabItems">

            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Rows="1"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button IsEnabled="{Binding IsSelectable}" Background="{Binding ColorBrush}" Style="{StaticResource MyButtonStyle}" Command="{Binding TabClickDown}" CommandParameter="{x:Null}"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        <Border BorderThickness="1" BorderBrush="Gray" Grid.Row="1" HorizontalAlignment="Stretch" Margin="3">
            <Grid Background="DarkGray">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.9*"/>
                    <ColumnDefinition Width="0.1*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Name="errors" Foreground="Red" TextAlignment="Center"  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <Button Grid.Column="1" Name="remove">
                    <TextBlock FontSize="30" Text="{Binding ButtonRemoveDisplay}"/>
                </Button>
            </Grid>
        </Border>
        <ScrollViewer Grid.Row="2" Name="entityEditor">
            <StackPanel Orientation="Vertical">
                <GroupBox Style="{StaticResource Group}" Background="DarkGray">
                    <GroupBox.Header>
                        <TextBlock Margin="10" Foreground="Black" FontSize="50" FontWeight="Bold" Text="{Binding ThrowParametersDisplay}"/>
                    </GroupBox.Header>
                    <WrapPanel Orientation="Horizontal">
                        <Border Style="{StaticResource InputBorder}">
                            <StackPanel Style="{StaticResource Panel}">
                                <TextBlock Margin="10" Foreground="Black" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}, Path=RadiusDisplay}"/>
                                <TextBox Tag="float" x:Name="Radius" Text="{Binding ActiveEntity.Radius, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, StringFormat={}{0:0.00}}"/>
                            </StackPanel>
                        </Border>

                        <Border Style="{StaticResource InputBorder}">
                            <StackPanel Style="{StaticResource Panel}">
                                <TextBlock Margin="10" Foreground="Black" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}, Path=MassDisplay}"/>
                                <TextBox Tag="float" x:Name="Mass" Text="{Binding ActiveEntity.Mass, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, StringFormat={}{0:0.00}}"/>
                            </StackPanel>
                        </Border>

                        <Border Style="{StaticResource InputBorder}">
                            <StackPanel Style="{StaticResource Panel}">
                                <TextBlock Margin="10" Foreground="Black" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}, Path=StartYDisplay}"/>
                                <TextBox Tag="float" x:Name="StartY" Text="{Binding ActiveEntity.StartY, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, StringFormat={}{0:0.00}}"/>
                            </StackPanel>
                        </Border>

                        <Border Style="{StaticResource InputBorder}">
                            <StackPanel Style="{StaticResource Panel}">
                                <TextBlock Margin="10" Foreground="Black" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}, Path=StartXDisplay}"/>
                                <TextBox Tag="float" x:Name="StartX" Text="{Binding ActiveEntity.StartX, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, StringFormat={}{0:0.00}}"/>
                            </StackPanel>
                        </Border>

                        <Border Style="{StaticResource InputBorder}">
                            <StackPanel Style="{StaticResource Panel}">
                                <TextBlock Margin="10" Foreground="Black" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}, Path=StartAngleDisplay}"/>
                                <TextBox Tag="float" x:Name="StartAngle" Text="{Binding ActiveEntity.StartAngle, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, StringFormat={}{0:0}}"/>
                            </StackPanel>
                        </Border>

                        <Border Style="{StaticResource InputBorder}">
                            <StackPanel Style="{StaticResource Panel}">
                                <TextBlock Margin="10" Foreground="Black" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}, Path=VelocityDisplay}"/>
                                <TextBox Tag="float" x:Name="Velocity" Text="{Binding ActiveEntity.Velocity, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, StringFormat={}{0:0.00}}"/>
                            </StackPanel>
                        </Border>

                        <Border Style="{StaticResource InputBorder}">
                            <StackPanel Style="{StaticResource Panel}">
                                <TextBlock Margin="10" Foreground="Black" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}, Path=AngularVelocityDisplay}"/>
                                <TextBox Tag="float" x:Name="AngularVelocity" Text="{Binding ActiveEntity.AngularVelocity, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, StringFormat={}{0:0.00}}"/>
                            </StackPanel>
                        </Border>
                    </WrapPanel>
                </GroupBox>
                <GroupBox Style="{StaticResource Group}" Background="DarkGray">
                    <GroupBox.Header>
                        <TextBlock Margin="10" Foreground="Black" FontSize="50" FontWeight="Bold" Text="{Binding CoefficientsDisplay}"/>
                    </GroupBox.Header>
                    <WrapPanel Orientation="Horizontal">
                        <Border Style="{StaticResource InputBorder}">
                            <StackPanel Style="{StaticResource Panel}">
                                <TextBlock Margin="10" Foreground="Black" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}, Path=RestitutionDisplay}"/>
                                <TextBox Tag="float" x:Name="Restitution" Text="{Binding ActiveEntity.Restitution, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, StringFormat={}{0:0.00}}"/>
                            </StackPanel>
                        </Border>
                        <Border Style="{StaticResource InputBorder}">
                            <StackPanel Style="{StaticResource Panel}">
                                <TextBlock Margin="10" Foreground="Black" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}, Path=AirResistanceDisplay}"/>
                                <TextBox Tag="float" x:Name="AirResistance" Text="{Binding ActiveEntity.AirResistance, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, StringFormat={}{0:0.00}}"/>
                            </StackPanel>
                        </Border>

                        <Border Style="{StaticResource InputBorder}">
                            <StackPanel Style="{StaticResource Panel}">
                                <TextBlock Margin="10" Foreground="Black" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}, Path=AngularDragDisplay}"/>
                                <TextBox Tag="float" x:Name="AngularDrag" Text="{Binding ActiveEntity.AngularDrag, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, StringFormat={}{0:0.00}}"/>
                            </StackPanel>
                        </Border>

                        <Border Style="{StaticResource InputBorder}">
                            <StackPanel Style="{StaticResource Panel}">
                                <TextBlock Margin="10" Foreground="Black" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}, Path=FrictionDisplay}"/>
                                <TextBox Tag="float" x:Name="Friction" Text="{Binding ActiveEntity.Friction, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, StringFormat={}{0:0.00}}"/>
                            </StackPanel>
                        </Border>
                    </WrapPanel>
                </GroupBox>

                <GroupBox Style="{StaticResource Group}" Background="DarkGray">
                    <GroupBox.Header>
                        <TextBlock Margin="10" Foreground="Black" FontSize="50" FontWeight="Bold" Text="{Binding WorldDisplay}"/>
                    </GroupBox.Header>
                    <WrapPanel Orientation="Horizontal" Background="DarkGray">
                        <Border Style="{StaticResource InputBorder}">
                            <StackPanel Style="{StaticResource Panel}">
                                <TextBlock Margin="10" Foreground="Black" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}, Path=GravitationalAccelerationDisplay}"/>
                                <TextBox Tag="float" x:Name="GravitationalAcceleration" Text="{Binding ActiveEntity.GravitationalAcceleration, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, StringFormat={}{0:0.00}}"/>
                            </StackPanel>
                        </Border>
                        
                        <Border Style="{StaticResource InputBorder}">
                            <StackPanel Style="{StaticResource Panel}">
                                <TextBlock Margin="10" Foreground="Black" Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}, Path=AirDensityDisplay}"/>
                                <TextBox Tag="float" x:Name="AirDensity" Text="{Binding ActiveEntity.AirDensity, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, StringFormat={}{0:0.00}}"/>
                            </StackPanel>
                        </Border>
                    </WrapPanel>
                </GroupBox>

            </StackPanel>

        </ScrollViewer>

        <Grid Grid.Row="3" HorizontalAlignment="Stretch" Background="DarkGray">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="0.09*"/>
                <ColumnDefinition Width="0.12*"/>
                <ColumnDefinition Width="0.20*"/>
                <ColumnDefinition Width="0.5*"/>
                <ColumnDefinition Width="0.12*"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left">
                <ListBox ItemsSource="{Binding AvailableBrushes}" SelectedIndex="0" Name="color">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border BorderThickness="2" BorderBrush="AliceBlue">
                                <Grid Width="100" Height="25" Background="{Binding}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">


                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </StackPanel>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.1*"/>
                    <RowDefinition Height="0.8*"/>
                    <RowDefinition Height="0.1*"/>
                </Grid.RowDefinitions>
                <Rectangle Grid.Row="0">
                </Rectangle>
                <Rectangle Width="100" Grid.Row="1" Stretch="UniformToFill" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Name="preview">
                </Rectangle>
                <Rectangle Grid.Row="2">
                </Rectangle>
            </Grid>

            <Button Grid.Column="2" Name="add">
                <TextBlock FontSize="30" Text="{Binding ButtonAddDisplay}"/>
            </Button>


            <WrapPanel Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Center">
                <TextBlock VerticalAlignment="Center" Foreground="Black" FontSize="20" Text="{Binding CheckboxEnableCollisionsDisplay}"/>
                <CheckBox VerticalAlignment="Center" Margin="5,0,0,0" IsChecked="{Binding EnableCollision}"/>
            </WrapPanel>

            <WrapPanel Grid.Column="4" VerticalAlignment="Center" Orientation="Vertical">
                <WrapPanel Orientation="Horizontal" Background="DarkGray">
                    <Border Style="{StaticResource InputBorder}" Height="99">
                        <StackPanel Style="{StaticResource Panel}">
                            <TextBlock VerticalAlignment="Center" Margin="10" FontSize="30" Foreground="Black" Text="{Binding UnitRatioDisplay}"/>
                            <TextBox VerticalAlignment="Center" Tag="float" FontSize="30" x:Name="UnitRatio" TextAlignment="Center" Text="{Binding UnitRatio, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, StringFormat={}{0:0.00}}" Height="93"/>
                        </StackPanel>
                    </Border>
                </WrapPanel>
            </WrapPanel>

            <Button Grid.Column="5" Command="{Binding StartSimulation}" CommandParameter="{x:Null}" HorizontalAlignment="Stretch">
                <TextBlock FontSize="30" Text="Start"/>
            </Button>


        </Grid>
    </Grid>
</ek:UIRoot>
